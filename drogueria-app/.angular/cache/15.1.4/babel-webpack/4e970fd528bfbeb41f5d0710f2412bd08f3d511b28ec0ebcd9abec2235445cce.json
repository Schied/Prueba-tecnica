{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/medicamento.service\";\nimport * as i2 from \"src/app/services/venta.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/inputtext\";\nfunction MedicamentoComponent_ng_template_6_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(col_r7.header);\n  }\n}\nfunction MedicamentoComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, MedicamentoComponent_ng_template_6_th_1_Template, 2, 1, \"th\", 28);\n    i0.ɵɵelementStart(2, \"th\", 29);\n    i0.ɵɵtext(3, \"Opciones\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const columns_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r5);\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"date\");\n  }\n  if (rf & 2) {\n    const col_r11 = i0.ɵɵnextContext().$implicit;\n    const medicamento_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(1, 1, medicamento_r8[col_r11.fields], \"dd/MM/yyyy\"));\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const col_r11 = i0.ɵɵnextContext().$implicit;\n    const medicamento_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(medicamento_r8[col_r11.fields]);\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, MedicamentoComponent_ng_template_7_td_1_span_1_Template, 1, 0, \"span\", 34);\n    i0.ɵɵtemplate(2, MedicamentoComponent_ng_template_7_td_1_ng_template_2_Template, 2, 4, \"ng-template\", null, 35, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MedicamentoComponent_ng_template_7_td_1_ng_template_4_Template, 1, 1, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r11 = ctx.$implicit;\n    const _r13 = i0.ɵɵreference(3);\n    const _r15 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", col_r11.fields === \"fecha_fabricacion\" || col_r11.fields === \"fecha_vencimiento\")(\"ngIfThen\", _r13)(\"ngIfElse\", _r15);\n  }\n}\nfunction MedicamentoComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, MedicamentoComponent_ng_template_7_td_1_Template, 6, 3, \"td\", 30);\n    i0.ɵɵelementStart(2, \"td\")(3, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function MedicamentoComponent_ng_template_7_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const medicamento_r8 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.venderMedicamento(medicamento_r8.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function MedicamentoComponent_ng_template_7_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const medicamento_r8 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.editarMedicamento(medicamento_r8.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function MedicamentoComponent_ng_template_7_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const medicamento_r8 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.eliminarMedicamento(medicamento_r8.id));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const columns_r9 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r9);\n  }\n}\nfunction MedicamentoComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function MedicamentoComponent_ng_template_30_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.RegistrarMed());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.frmMedicamento.invalid);\n  }\n}\nfunction MedicamentoComponent_ng_template_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function MedicamentoComponent_ng_template_53_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.ModificarMed());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.frmMMedicamento.invalid);\n  }\n}\nfunction MedicamentoComponent_ng_template_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function MedicamentoComponent_ng_template_59_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.VenderMed());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"550px\"\n  };\n};\nexport class MedicamentoComponent {\n  constructor(medicamentoService, ventaService, formBuilder) {\n    this.medicamentoService = medicamentoService;\n    this.ventaService = ventaService;\n    this.formBuilder = formBuilder;\n    this.medicamentos = [];\n    this.cols = [];\n    this.modalMed = false;\n    this.modalMMed = false;\n    this.modalVenta = false;\n    this.medicamento = {\n      id: null,\n      nombre: null,\n      fecha_fabricacion: null,\n      fecha_vencimiento: null,\n      stock: null,\n      valor: null\n    };\n    this.venta = {\n      fecha: null,\n      hora: null,\n      medicamento: null,\n      cantidad: null,\n      valor_unitario: null,\n      valor_total: null\n    };\n  }\n  ngOnInit() {\n    this.getMedicamentos();\n    this.cols = [{\n      fields: \"id\",\n      header: \"Id\"\n    }, {\n      fields: \"nombre\",\n      header: \"Nombre\"\n    }, {\n      fields: \"fecha_fabricacion\",\n      header: \"Fecha de fabricacion\"\n    }, {\n      fields: \"fecha_vencimiento\",\n      header: \"Fecha de vencimiento\"\n    }, {\n      fields: \"stock\",\n      header: \"Cantidad\"\n    }, {\n      fields: \"valor\",\n      header: \"Valor Unitario\"\n    }];\n    this.frmMedicamento = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: ['', [Validators.required]],\n      fecha_vencimiento: ['', [Validators.required]],\n      stock: ['', [Validators.required, Validators.min(1)]],\n      valor: ['', [Validators.required, Validators.min(100)]]\n    });\n    this.frmMMedicamento = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: ['', [Validators.required]],\n      fecha_vencimiento: ['', [Validators.required]],\n      stock: ['', [Validators.required, Validators.min(1)]],\n      valor: ['', [Validators.required, Validators.min(100)]]\n    });\n  }\n  getMedicamentos() {\n    this.medicamentoService.getMedicamentos().subscribe(result => {\n      let meds = [];\n      for (const element of result) {\n        element.fecha_fabricacion = this.formDate(element.fecha_fabricacion);\n        element.fecha_vencimiento = this.formDate(element.fecha_vencimiento);\n        meds.push(element);\n      }\n      this.medicamentos = meds;\n    }, error => {\n      console.log(error);\n    });\n  }\n  showModalMed() {\n    this.modalMed = true;\n  }\n  RegistrarMed() {\n    let form = {\n      nombre: this.frmMedicamento.controls['nombre'].value,\n      fecha_fabricacion: this.frmMedicamento.controls['fecha_fabricacion'].value,\n      fecha_vencimiento: this.frmMedicamento.controls['fecha_vencimiento'].value,\n      stock: this.frmMedicamento.controls['stock'].value,\n      valor: this.frmMedicamento.controls['valor'].value\n    };\n    this.medicamentoService.save(form).subscribe(res => {\n      if (res) {\n        this.modalMed = false;\n        this.getMedicamentos();\n      }\n    });\n  }\n  editarMedicamento(medId) {\n    let med = this.medicamentos.find(ele => ele.id == medId);\n    this.frmMMedicamento = this.formBuilder.group({\n      id: [med.id, [Validators.required]],\n      nombre: [med.nombre, [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: [med.fecha_fabricacion, [Validators.required]],\n      fecha_vencimiento: [med.fecha_vencimiento, [Validators.required]],\n      stock: [med.stock, [Validators.required, Validators.min(1)]],\n      valor: [med.valor, [Validators.required, Validators.min(100)]]\n    });\n    console.log(med);\n    this.modalMMed = true;\n  }\n  venderMedicamento(medId) {\n    this.medVenta = this.medicamentos.find(ele => ele.id == medId);\n    this.modalVenta = true;\n  }\n  ModificarMed() {\n    let form = {\n      id: this.frmMMedicamento.controls['id'].value,\n      nombre: this.frmMMedicamento.controls['nombre'].value,\n      fecha_fabricacion: this.frmMMedicamento.controls['fecha_fabricacion'].value,\n      fecha_vencimiento: this.frmMMedicamento.controls['fecha_vencimiento'].value,\n      stock: this.frmMMedicamento.controls['stock'].value,\n      valor: this.frmMMedicamento.controls['valor'].value\n    };\n    this.medicamentoService.update(form).subscribe(res => {\n      console.log(res);\n      if (res) {\n        this.modalMMed = false;\n        this.getMedicamentos();\n      }\n    });\n  }\n  eliminarMedicamento(medId) {\n    console.log(medId);\n    this.medicamentoService.delete(medId).subscribe(res => {\n      this.getMedicamentos();\n    });\n  }\n  VenderMed() {\n    if (this.venta.cantidad <= this.medVenta.stock && this.venta.cantidad > 0) {\n      this.medVenta.stock -= this.venta.cantidad;\n      this.medicamentoService.update(this.medVenta).subscribe(res => {\n        console.log(res);\n        if (res) {\n          this.getMedicamentos();\n        }\n      });\n      let fecha = new Date();\n      this.venta.fecha = fecha;\n      this.venta.hora = fecha.getHours() + \":\" + fecha.getMinutes();\n      this.venta.medicamento = this.medVenta.nombre;\n      this.venta.valor_unitario = this.medVenta.valor;\n      this.venta.valor_total = this.medVenta.valor * this.venta.cantidad;\n      this.ventaService.save(this.venta).subscribe(res => {\n        if (res) {\n          this.modalVenta = false;\n        }\n      });\n    } else {\n      alert(\"Cantidad invalida\");\n    }\n  }\n  formDate(date) {\n    let fecha = new Date(date),\n      month = '' + (fecha.getMonth() + 1),\n      day = '' + fecha.getDate(),\n      year = fecha.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\nMedicamentoComponent.ɵfac = function MedicamentoComponent_Factory(t) {\n  return new (t || MedicamentoComponent)(i0.ɵɵdirectiveInject(i1.MedicamentoService), i0.ɵɵdirectiveInject(i2.VentaService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nMedicamentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MedicamentoComponent,\n  selectors: [[\"app-medicamento\"]],\n  decls: 60,\n  vars: 25,\n  consts: [[\"pButton\", \"\", \"type\", \"button\", \"label\", \"Registrar nuevo\", 1, \"p-button-primary\", 3, \"click\"], [3, \"value\", \"columns\", \"paginator\", \"rows\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"header\", \"Registrar nuevo\", \"styleClass\", \"p-fluid\", 3, \"responsive\", \"visible\", \"modal\", \"visibleChange\"], [1, \"login-container\", 3, \"formGroup\", \"submit\"], [\"for\", \"float-input\"], [\"id\", \"nombre\", \"type\", \"text\", \"name\", \"nombre\", \"formControlName\", \"nombre\", \"pInputText\", \"\"], [\"id\", \"fecha_fabricacion\", \"type\", \"date\", \"name\", \"fecha_fabricacion\", \"formControlName\", \"fecha_fabricacion\", \"pInputText\", \"\"], [\"for\", \"fecha_vencimiento\"], [\"id\", \"fecha_vencimiento\", \"type\", \"date\", \"name\", \"fecha_vencimiento\", \"formControlName\", \"fecha_vencimiento\", \"pInputText\", \"\"], [\"for\", \"stock\"], [\"id\", \"stock\", \"type\", \"number\", \"name\", \"stock\", \"formControlName\", \"stock\", \"pInputText\", \"\"], [\"for\", \"valor\"], [\"id\", \"valor\", \"type\", \"number\", \"name\", \"valor\", \"formControlName\", \"valor\", \"pInputText\", \"\"], [\"pTemplate\", \"footer\"], [\"header\", \"Modificar medicamento\", \"styleClass\", \"p-fluid\", 3, \"responsive\", \"visible\", \"modal\", \"visibleChange\"], [1, \"field\"], [\"for\", \"nombre\"], [\"id\", \"nombre\", \"type\", \"text\", \"name\", \"nombre\", \"formControlName\", \"nombre\"], [\"for\", \"fecha_fabricacion\"], [\"id\", \"fecha_fabricacion\", \"type\", \"text\", \"name\", \"fecha_fabricacion\", \"formControlName\", \"fecha_fabricacion\"], [\"id\", \"fecha_vencimiento\", \"type\", \"text\", \"name\", \"fecha_vencimiento\", \"formControlName\", \"fecha_vencimiento\"], [\"id\", \"stock\", \"type\", \"number\", \"name\", \"stock\", \"formControlName\", \"stock\"], [\"id\", \"valor\", \"type\", \"number\", \"name\", \"valor\", \"formControlName\", \"valor\"], [\"header\", \"Realizar venta\", \"styleClass\", \"p-fluid\", 3, \"responsive\", \"visible\", \"modal\", \"visibleChange\"], [\"for\", \"cantidad\"], [\"id\", \"cantidad\", \"type\", \"number\", \"name\", \"cantidad\", 3, \"ngModel\", \"ngModelChange\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Vender\", 1, \"p-button-primary\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Editar\", 1, \"p-button-warning\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Borrar\", 1, \"p-button-danger\", 3, \"click\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"thenTemplateName\", \"\"], [\"elseTemplateName\", \"\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-text\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-text\", 3, \"click\"]],\n  template: function MedicamentoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MedicamentoComponent_Template_button_click_2_listener() {\n        return ctx.showModalMed();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\")(4, \"br\");\n      i0.ɵɵelementStart(5, \"p-table\", 1);\n      i0.ɵɵtemplate(6, MedicamentoComponent_ng_template_6_Template, 4, 1, \"ng-template\", 2);\n      i0.ɵɵtemplate(7, MedicamentoComponent_ng_template_7_Template, 6, 1, \"ng-template\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p-dialog\", 4);\n      i0.ɵɵlistener(\"visibleChange\", function MedicamentoComponent_Template_p_dialog_visibleChange_8_listener($event) {\n        return ctx.modalMed = $event;\n      });\n      i0.ɵɵelementStart(9, \"form\", 5);\n      i0.ɵɵlistener(\"submit\", function MedicamentoComponent_Template_form_submit_9_listener() {\n        return ctx.RegistrarMed();\n      });\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Fecha de fabricaci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\", 9);\n      i0.ɵɵtext(20, \"Fecha de vencimiento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\")(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\")(27, \"label\", 13);\n      i0.ɵɵtext(28, \"Valor unitario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(30, MedicamentoComponent_ng_template_30_Template, 1, 1, \"ng-template\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"p-dialog\", 16);\n      i0.ɵɵlistener(\"visibleChange\", function MedicamentoComponent_Template_p_dialog_visibleChange_31_listener($event) {\n        return ctx.modalMMed = $event;\n      });\n      i0.ɵɵelementStart(32, \"form\", 5);\n      i0.ɵɵlistener(\"submit\", function MedicamentoComponent_Template_form_submit_32_listener() {\n        return ctx.ModificarMed();\n      });\n      i0.ɵɵelementStart(33, \"div\", 17)(34, \"label\", 18);\n      i0.ɵɵtext(35, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\")(38, \"label\", 20);\n      i0.ɵɵtext(39, \"Fecha de fabricaci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\")(42, \"label\", 9);\n      i0.ɵɵtext(43, \"Fecha de vencimiento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\")(46, \"label\", 11);\n      i0.ɵɵtext(47, \"Stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\")(50, \"label\", 13);\n      i0.ɵɵtext(51, \"Valor unitario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"input\", 24);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(53, MedicamentoComponent_ng_template_53_Template, 1, 1, \"ng-template\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"p-dialog\", 25);\n      i0.ɵɵlistener(\"visibleChange\", function MedicamentoComponent_Template_p_dialog_visibleChange_54_listener($event) {\n        return ctx.modalVenta = $event;\n      });\n      i0.ɵɵelementStart(55, \"div\", 17)(56, \"label\", 26);\n      i0.ɵɵtext(57, \"Cantidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"input\", 27);\n      i0.ɵɵlistener(\"ngModelChange\", function MedicamentoComponent_Template_input_ngModelChange_58_listener($event) {\n        return ctx.venta.cantidad = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(59, MedicamentoComponent_ng_template_59_Template, 1, 0, \"ng-template\", 15);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.medicamentos)(\"columns\", ctx.cols)(\"paginator\", true)(\"rows\", 3);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c0));\n      i0.ɵɵproperty(\"responsive\", true)(\"visible\", ctx.modalMed)(\"modal\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.frmMedicamento);\n      i0.ɵɵadvance(22);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c0));\n      i0.ɵɵproperty(\"responsive\", true)(\"visible\", ctx.modalMMed)(\"modal\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.frmMMedicamento);\n      i0.ɵɵadvance(22);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c0));\n      i0.ɵɵproperty(\"responsive\", true)(\"visible\", ctx.modalVenta)(\"modal\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.venta.cantidad);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.Table, i6.PrimeTemplate, i7.ButtonDirective, i8.Dialog, i9.InputText, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.NgModel, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","MedicamentoComponent","constructor","medicamentoService","ventaService","formBuilder","id","nombre","fecha_fabricacion","fecha_vencimiento","stock","valor","fecha","hora","medicamento","cantidad","valor_unitario","valor_total","ngOnInit","getMedicamentos","cols","fields","header","frmMedicamento","group","required","minLength","min","frmMMedicamento","subscribe","result","meds","element","formDate","push","medicamentos","error","console","log","showModalMed","modalMed","RegistrarMed","form","controls","value","save","res","editarMedicamento","medId","med","find","ele","modalMMed","venderMedicamento","medVenta","modalVenta","ModificarMed","update","eliminarMedicamento","delete","VenderMed","venta","Date","getHours","getMinutes","alert","date","month","getMonth","day","getDate","year","getFullYear","length","join","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Schied\\Desktop\\MS\\drogueria-app\\src\\app\\components\\medicamento\\medicamento.component.ts","C:\\Users\\Schied\\Desktop\\MS\\drogueria-app\\src\\app\\components\\medicamento\\medicamento.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Medicamento } from 'src/app/models/medicamento';\nimport { MedicamentoService } from 'src/app/services/medicamento.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { VentaService } from 'src/app/services/venta.service';\n\n@Component({\n  selector: 'app-medicamento',\n  templateUrl: './medicamento.component.html',\n  styleUrls: ['./medicamento.component.css']\n})\nexport class MedicamentoComponent implements OnInit{\n\n  medicamentos: Medicamento[] = [];\n  cols: any[] = [];\n  modalMed: boolean = false;\n  modalMMed: boolean = false;\n  modalVenta: boolean = false;\n  frmMedicamento: any;\n  frmMMedicamento: any;\n  medVenta: any;\n  medicamento: any = {\n    id: null,\n    nombre: null,\n    fecha_fabricacion: null,\n    fecha_vencimiento: null,\n    stock: null,\n    valor: null\n  }\n  venta: any = {\n    fecha: null,\n    hora: null,\n    medicamento: null,\n    cantidad: null,\n    valor_unitario: null,\n    valor_total: null\n  };\n\n  constructor(private medicamentoService: MedicamentoService, private ventaService: VentaService, private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.getMedicamentos();\n    this.cols = [\n      {fields: \"id\", header: \"Id\"},\n      {fields: \"nombre\", header: \"Nombre\"},\n      {fields: \"fecha_fabricacion\", header: \"Fecha de fabricacion\"},\n      {fields: \"fecha_vencimiento\", header: \"Fecha de vencimiento\"},\n      {fields: \"stock\", header: \"Cantidad\"},\n      {fields: \"valor\", header: \"Valor Unitario\"},\n    ]\n    this.frmMedicamento = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: ['', [Validators.required]],\n      fecha_vencimiento: ['', [Validators.required]],\n      stock: ['', [Validators.required, Validators.min(1)]],\n      valor: ['', [Validators.required, Validators.min(100)]],\n    });\n    this.frmMMedicamento = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: ['', [Validators.required]],\n      fecha_vencimiento: ['', [Validators.required]],\n      stock: ['', [Validators.required, Validators.min(1)]],\n      valor: ['', [Validators.required, Validators.min(100)]],\n    });\n  }\n\n  getMedicamentos(){\n    this.medicamentoService.getMedicamentos().subscribe( (result): any =>{\n      let meds: Medicamento[] = [];\n      for (const element of result) {\n        element.fecha_fabricacion = this.formDate(element.fecha_fabricacion);\n        element.fecha_vencimiento = this.formDate(element.fecha_vencimiento);\n        meds.push(element);\n      }\n      this.medicamentos = meds;\n    },\n    error => {\n      console.log(error);\n    }\n    );\n  }\n\n  showModalMed(): void{\n    this.modalMed = true;\n  }\n\n  RegistrarMed(): void{\n    let form = {\n      nombre: this.frmMedicamento.controls['nombre'].value,\n      fecha_fabricacion: this.frmMedicamento.controls['fecha_fabricacion'].value,\n      fecha_vencimiento: this.frmMedicamento.controls['fecha_vencimiento'].value,\n      stock: this.frmMedicamento.controls['stock'].value,\n      valor: this.frmMedicamento.controls['valor'].value\n    }\n    this.medicamentoService.save(form).subscribe(res => {\n      if(res){\n        this.modalMed = false;\n        this.getMedicamentos();\n      }\n    })\n  }\n\n  editarMedicamento(medId: number): void{\n    let med: any = this.medicamentos.find(ele => ele.id == medId);\n    this.frmMMedicamento = this.formBuilder.group({\n      id: [med.id, [Validators.required]],\n      nombre: [med.nombre, [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: [med.fecha_fabricacion, [Validators.required]],\n      fecha_vencimiento: [med.fecha_vencimiento, [Validators.required]],\n      stock: [med.stock, [Validators.required, Validators.min(1)]],\n      valor: [med.valor, [Validators.required, Validators.min(100)]],\n    });\n    console.log(med);\n    this.modalMMed = true;\n  }\n\n  venderMedicamento(medId: number): void{\n    this.medVenta = this.medicamentos.find(ele => ele.id == medId);\n    this.modalVenta = true;\n  }\n\n  ModificarMed(): void{\n    let form = {\n      id: this.frmMMedicamento.controls['id'].value,\n      nombre: this.frmMMedicamento.controls['nombre'].value,\n      fecha_fabricacion: this.frmMMedicamento.controls['fecha_fabricacion'].value,\n      fecha_vencimiento: this.frmMMedicamento.controls['fecha_vencimiento'].value,\n      stock: this.frmMMedicamento.controls['stock'].value,\n      valor: this.frmMMedicamento.controls['valor'].value\n    }\n    this.medicamentoService.update(form).subscribe(res => {\n      console.log(res);\n      if(res){\n        this.modalMMed = false;\n        this.getMedicamentos();\n      }\n    })\n  }\n\n  eliminarMedicamento(medId: number){\n    console.log(medId);\n    this.medicamentoService.delete(medId).subscribe(res => {\n      this.getMedicamentos();\n    })\n  }\n\n  VenderMed(): void{\n    if(this.venta.cantidad<=this.medVenta.stock && this.venta.cantidad>0){\n      this.medVenta.stock -= this.venta.cantidad;\n      this.medicamentoService.update(this.medVenta).subscribe(res => {\n        console.log(res);\n        if(res){\n          this.getMedicamentos();\n        }\n      });\n      let fecha = new Date();\n      this.venta.fecha = fecha;\n      this.venta.hora = fecha.getHours()+\":\"+fecha.getMinutes();\n      this.venta.medicamento = this.medVenta.nombre;\n      this.venta.valor_unitario = this.medVenta.valor;\n      this.venta.valor_total = this.medVenta.valor * this.venta.cantidad;\n      this.ventaService.save(this.venta).subscribe(res => {\n        if(res){\n          this.modalVenta = false;\n        }\n      })\n    }else{\n      alert(\"Cantidad invalida\");\n    }\n\n  }\n\n  formDate(date: any) {\n    let fecha = new Date(date),\n        month = '' + (fecha.getMonth() + 1),\n        day = '' + fecha.getDate(),\n        year = fecha.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<div>\n  <br>\n  <button pButton type=\"button\" label=\"Registrar nuevo\" class=\"p-button-primary\" (click)=\"showModalMed()\"></button>\n  <br>\n  <br>\n  <p-table [value]=\"medicamentos\" [columns]=\"cols\" [paginator]=\"true\" [rows]=\"3\" >\n    <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" scope=\"col\">{{col.header}}</th>\n            <th scope=\"col\">Opciones</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-medicamento let-columns=\"columns\">\n        <tr>\n            <td *ngFor=\"let col of columns\" >\n              <span *ngIf=\"col.fields === 'fecha_fabricacion' || col.fields === 'fecha_vencimiento'; then thenTemplateName else elseTemplateName\"></span>\n              <ng-template #thenTemplateName>{{ medicamento[col.fields] | date: 'dd/MM/yyyy'}}</ng-template>\n              <ng-template #elseTemplateName>{{ medicamento[col.fields]}}</ng-template>\n            </td>\n            <td>\n              <button pButton type=\"button\" label=\"Vender\" class=\"p-button-primary\" (click)=\"venderMedicamento(medicamento.id)\"></button>\n              <button pButton type=\"button\" label=\"Editar\" class=\"p-button-warning\" (click)=\"editarMedicamento(medicamento.id)\"></button>\n              <button pButton type=\"button\" label=\"Borrar\" class=\"p-button-danger\" (click)=\"eliminarMedicamento(medicamento.id)\"></button>\n            </td>\n        </tr>\n    </ng-template>\n  </p-table>\n  <!--MODAL REGISTRO-->\n  <p-dialog header=\"Registrar nuevo\" [responsive]=\"true\" [style]=\"{width: '550px'}\" [(visible)]=\"modalMed\" [modal]=\"true\" styleClass=\"p-fluid\">\n    <form [formGroup]=\"frmMedicamento\" class=\"login-container\" (submit)=\"RegistrarMed()\">\n      <div>\n        <label for=\"float-input\">Nombre</label>\n        <input id=\"nombre\" type=\"text\" name=\"nombre\" formControlName=\"nombre\" pInputText>\n      </div>\n      <div>\n        <label for=\"float-input\">Fecha de fabricación</label>\n        <input id=\"fecha_fabricacion\" type=\"date\" name=\"fecha_fabricacion\" formControlName=\"fecha_fabricacion\" pInputText>\n      </div>\n      <div>\n        <label for=\"fecha_vencimiento\">Fecha de vencimiento</label>\n        <input id=\"fecha_vencimiento\" type=\"date\" name=\"fecha_vencimiento\" formControlName=\"fecha_vencimiento\" pInputText>\n      </div>\n      <div>\n        <label for=\"stock\">Stock</label>\n        <input id=\"stock\" type=\"number\" name=\"stock\" formControlName=\"stock\" pInputText>\n      </div>\n      <div>\n        <label for=\"valor\">Valor unitario</label>\n        <input id=\"valor\" type=\"number\" name=\"valor\" formControlName=\"valor\" pInputText>\n      </div>\n    </form>\n    <ng-template pTemplate=\"footer\">\n      <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" [disabled]=\"frmMedicamento.invalid\" (click)=\"RegistrarMed()\"></button>\n    </ng-template>\n  </p-dialog>\n  <!--MODAL MODIFICAR-->\n  <p-dialog header=\"Modificar medicamento\" [responsive]=\"true\" [style]=\"{width: '550px'}\" [(visible)]=\"modalMMed\" [modal]=\"true\" styleClass=\"p-fluid\">\n    <form [formGroup]=\"frmMMedicamento\" class=\"login-container\" (submit)=\"ModificarMed()\">\n      <div class=\"field\">\n        <label for=\"nombre\">Nombre</label>\n        <input id=\"nombre\" type=\"text\" name=\"nombre\" formControlName=\"nombre\">\n      </div>\n      <div>\n        <label for=\"fecha_fabricacion\">Fecha de fabricación</label>\n        <input id=\"fecha_fabricacion\" type=\"text\" name=\"fecha_fabricacion\" formControlName=\"fecha_fabricacion\">\n      </div>\n      <div>\n        <label for=\"fecha_vencimiento\">Fecha de vencimiento</label>\n        <input id=\"fecha_vencimiento\" type=\"text\" name=\"fecha_vencimiento\" formControlName=\"fecha_vencimiento\">\n      </div>\n      <div>\n        <label for=\"stock\">Stock</label>\n        <input id=\"stock\" type=\"number\" name=\"stock\" formControlName=\"stock\">\n      </div>\n      <div>\n        <label for=\"valor\">Valor unitario</label>\n        <input id=\"valor\" type=\"number\" name=\"valor\" formControlName=\"valor\">\n      </div>\n    </form>\n    <ng-template pTemplate=\"footer\">\n      <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" [disabled]=\"frmMMedicamento.invalid\" (click)=\"ModificarMed()\"></button>\n    </ng-template>\n  </p-dialog>\n  <!--MODAL VENTA-->\n  <p-dialog header=\"Realizar venta\" [responsive]=\"true\" [style]=\"{width: '550px'}\" [(visible)]=\"modalVenta\" [modal]=\"true\" styleClass=\"p-fluid\">\n    <div class=\"field\">\n      <label for=\"cantidad\">Cantidad</label>\n      <input id=\"cantidad\" type=\"number\" name=\"cantidad\" [(ngModel)]=\"venta.cantidad\">\n    </div>\n    <ng-template pTemplate=\"footer\">\n      <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"VenderMed()\"></button>\n    </ng-template>\n  </p-dialog>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}