{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/venta.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"@angular/forms\";\nfunction VentaComponent_ng_template_22_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(col_r4.header);\n  }\n}\nfunction VentaComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, VentaComponent_ng_template_22_th_1_Template, 2, 1, \"th\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r2);\n  }\n}\nfunction VentaComponent_ng_template_23_td_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction VentaComponent_ng_template_23_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"date\");\n  }\n  if (rf & 2) {\n    const col_r8 = i0.ɵɵnextContext().$implicit;\n    const medicamento_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(1, 1, medicamento_r5[col_r8.fields], \"dd/MM/yyyy\"));\n  }\n}\nfunction VentaComponent_ng_template_23_td_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const col_r8 = i0.ɵɵnextContext().$implicit;\n    const medicamento_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(medicamento_r5[col_r8.fields]);\n  }\n}\nfunction VentaComponent_ng_template_23_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, VentaComponent_ng_template_23_td_1_span_1_Template, 1, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, VentaComponent_ng_template_23_td_1_ng_template_2_Template, 2, 4, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, VentaComponent_ng_template_23_td_1_ng_template_4_Template, 1, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r8 = ctx.$implicit;\n    const _r10 = i0.ɵɵreference(3);\n    const _r12 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", col_r8.fields === \"fecha_fabricacion\" || col_r8.fields === \"fecha_vencimiento\")(\"ngIfThen\", _r10)(\"ngIfElse\", _r12);\n  }\n}\nfunction VentaComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, VentaComponent_ng_template_23_td_1_Template, 6, 3, \"td\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r6 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r6);\n  }\n}\nexport class VentaComponent {\n  constructor(ventaService, messageService) {\n    this.ventaService = ventaService;\n    this.messageService = messageService;\n    this.ventas = [];\n    this.cols = [];\n    this.date = new Date();\n    this.today = `${this.date.getFullYear()}-${this.date.getMonth() + 1}-${this.date.getDate() < 10 ? '0' + this.date.getDate() : this.date.getDate()}`;\n    this.filtro = {\n      Dateini: this.today,\n      Datefin: this.today\n    };\n  }\n  ngOnInit() {\n    this.getVentas();\n    this.cols = [{\n      fields: \"id\",\n      header: \"Id\"\n    }, {\n      fields: \"fecha\",\n      header: \"Fecha de venta\"\n    }, {\n      fields: \"hora\",\n      header: \"Hora\"\n    }, {\n      fields: \"medicamento\",\n      header: \"Medicamento\"\n    }, {\n      fields: \"cantidad\",\n      header: \"Cantidad vendida\"\n    }, {\n      fields: \"valor_unitario\",\n      header: \"Valor Unitario\"\n    }, {\n      fields: \"valor_total\",\n      header: \"Valor Total\"\n    }];\n  }\n  cambioFecha() {\n    this.filtro.Datefin = this.filtro.Dateini;\n  }\n  getVentas() {\n    this.ventaService.getVentas().subscribe(result => {\n      let ventas = [];\n      for (const element of result) {\n        element.fecha = this.formDate(element.fecha);\n        ventas.push(element);\n      }\n      this.ventas = ventas;\n    }, error => {\n      console.log(error);\n    });\n  }\n  filtrarVentas() {\n    let ventas = this.ventas.filter(ele => ele.fecha >= this.filtro.Dateini && ele.fecha <= this.filtro.Datefin);\n    if (ventas.length > 0) {\n      alert(\"hay ventas\");\n    } else {\n      this.messageService.add({\n        severity: 'info',\n        summary: 'Info',\n        detail: 'No se encontraron resultados'\n      });\n    }\n  }\n  formDate(date) {\n    let fecha = new Date(date),\n      month = '' + (fecha.getMonth() + 1),\n      day = '' + fecha.getDate(),\n      year = fecha.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\nVentaComponent.ɵfac = function VentaComponent_Factory(t) {\n  return new (t || VentaComponent)(i0.ɵɵdirectiveInject(i1.VentaService), i0.ɵɵdirectiveInject(i2.MessageService));\n};\nVentaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VentaComponent,\n  selectors: [[\"app-venta\"]],\n  decls: 24,\n  vars: 18,\n  consts: [[2, \"display\", \"flex\"], [2, \"display\", \"block\", \"margin-right\", \"1rem\"], [\"for\", \"float-input\"], [\"id\", \"fecha_fabricacion\", \"type\", \"date\", \"name\", \"fecha_fabricacion\", \"pInputText\", \"\", 3, \"ngModel\", \"max\", \"ngModelChange\", \"change\"], [2, \"margin-right\", \"10px\"], [\"for\", \"fecha_vencimiento\"], [\"id\", \"fecha_vencimiento\", \"type\", \"date\", \"name\", \"fecha_vencimiento\", \"pInputText\", \"\", 3, \"ngModel\", \"min\", \"max\", \"ngModelChange\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Filtrar\", 1, \"p-button-primary\", 3, \"click\"], [3, \"value\", \"columns\", \"paginator\", \"rows\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"thenTemplateName\", \"\"], [\"elseTemplateName\", \"\"]],\n  template: function VentaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Filtro de ventas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 1)(6, \"label\", 2);\n      i0.ɵɵtext(7, \"Fecha inicio \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function VentaComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.filtro.Dateini = $event;\n      })(\"change\", function VentaComponent_Template_input_change_8_listener() {\n        return ctx.cambioFecha();\n      });\n      i0.ɵɵpipe(9, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Fecha fin \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function VentaComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.filtro.Datefin = $event;\n      });\n      i0.ɵɵpipe(15, \"date\");\n      i0.ɵɵpipe(16, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function VentaComponent_Template_button_click_18_listener() {\n        return ctx.filtrarVentas();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(19, \"br\")(20, \"br\");\n      i0.ɵɵelementStart(21, \"p-table\", 8);\n      i0.ɵɵtemplate(22, VentaComponent_ng_template_22_Template, 2, 1, \"ng-template\", 9);\n      i0.ɵɵtemplate(23, VentaComponent_ng_template_23_Template, 2, 1, \"ng-template\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵpropertyInterpolate(\"max\", i0.ɵɵpipeBind2(9, 9, ctx.today, \"yyyy-MM-dd\"));\n      i0.ɵɵproperty(\"ngModel\", ctx.filtro.Dateini);\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"min\", i0.ɵɵpipeBind2(15, 12, ctx.filtro.Dateini, \"yyyy-MM-dd\"));\n      i0.ɵɵpropertyInterpolate(\"max\", i0.ɵɵpipeBind2(16, 15, ctx.today, \"yyyy-MM-dd\"));\n      i0.ɵɵproperty(\"ngModel\", ctx.filtro.Datefin);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", ctx.ventas)(\"columns\", ctx.cols)(\"paginator\", true)(\"rows\", 3);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.Table, i2.PrimeTemplate, i5.ButtonDirective, i6.InputText, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","VentaComponent","constructor","ventaService","messageService","Date","date","getFullYear","getMonth","getDate","Dateini","today","Datefin","ngOnInit","getVentas","cols","fields","header","cambioFecha","filtro","subscribe","result","ventas","element","fecha","formDate","push","error","console","log","filtrarVentas","filter","ele","length","alert","add","severity","summary","detail","month","day","year","join","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Schied\\Desktop\\MS\\drogueria-app\\src\\app\\components\\venta\\venta.component.html","C:\\Users\\Schied\\Desktop\\MS\\drogueria-app\\src\\app\\components\\venta\\venta.component.ts"],"sourcesContent":["<div>\n  <br>\n  <h3>Filtro de ventas</h3>\n  <div style=\"display: flex;\">\n    <div style=\"display: block; margin-right: 1rem;\">\n      <label for=\"float-input\">Fecha inicio </label>\n      <input id=\"fecha_fabricacion\" type=\"date\" name=\"fecha_fabricacion\" [(ngModel)]=\"filtro.Dateini\" (change)=\"cambioFecha()\" max=\"{{today | date:'yyyy-MM-dd'}}\" pInputText>\n    </div>\n    <br>\n    <div style=\"margin-right: 10px;\">\n      <label for=\"fecha_vencimiento\">Fecha fin </label>\n      <input id=\"fecha_vencimiento\" type=\"date\" name=\"fecha_vencimiento\" [(ngModel)]=\"filtro.Datefin\" min=\"{{filtro.Dateini | date:'yyyy-MM-dd'}}\" max=\"{{today | date:'yyyy-MM-dd'}}\" pInputText>\n    </div>\n    <div>\n      <button pButton type=\"button\" label=\"Filtrar\" class=\"p-button-primary\" (click)=\"filtrarVentas()\"></button>\n    </div>\n  </div>\n  <br>\n  <br>\n  <p-table [value]=\"ventas\" [columns]=\"cols\" [paginator]=\"true\" [rows]=\"3\" >\n    <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" scope=\"col\">{{col.header}}</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-medicamento let-columns=\"columns\">\n        <tr>\n            <td *ngFor=\"let col of columns\" >\n              <span *ngIf=\"col.fields === 'fecha_fabricacion' || col.fields === 'fecha_vencimiento'; then thenTemplateName else elseTemplateName\"></span>\n              <ng-template #thenTemplateName>{{ medicamento[col.fields] | date: 'dd/MM/yyyy'}}</ng-template>\n              <ng-template #elseTemplateName>{{ medicamento[col.fields]}}</ng-template>\n            </td>\n        </tr>\n    </ng-template>\n  </p-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Venta } from 'src/app/models/venta';\nimport { VentaService } from 'src/app/services/venta.service';\nimport {MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-venta',\n  templateUrl: './venta.component.html',\n  styleUrls: ['./venta.component.css']\n})\nexport class VentaComponent implements OnInit{\n  ventas: Venta[] = [];\n  cols: any[] = [];\n  date = new Date();\n  today = `${this.date.getFullYear()}-${this.date.getMonth()+1}-${this.date.getDate()<10 ? '0'+this.date.getDate() : this.date.getDate()}`;\n  filtro = {\n    Dateini: this.today,\n    Datefin: this.today\n  }\n  constructor(private ventaService: VentaService, private messageService: MessageService){ }\n  ngOnInit(): void {\n    this.getVentas();\n    this.cols = [\n      {fields: \"id\", header: \"Id\"},\n      {fields: \"fecha\", header: \"Fecha de venta\"},\n      {fields: \"hora\", header: \"Hora\"},\n      {fields: \"medicamento\", header: \"Medicamento\"},\n      {fields: \"cantidad\", header: \"Cantidad vendida\"},\n      {fields: \"valor_unitario\", header: \"Valor Unitario\"},\n      {fields: \"valor_total\", header: \"Valor Total\"},\n    ]\n  }\n  cambioFecha(){\n    this.filtro.Datefin = this.filtro.Dateini;\n  }\n  getVentas(): void{\n    this.ventaService.getVentas().subscribe( (result): any =>{\n      let ventas: Venta[] = [];\n      for (const element of result) {\n        element.fecha = this.formDate(element.fecha);\n        ventas.push(element);\n      }\n      this.ventas = ventas;\n    },\n    error => {\n      console.log(error);\n    }\n    );\n  }\n  filtrarVentas(): void{\n    let ventas = this.ventas.filter(ele => ele.fecha>=this.filtro.Dateini && ele.fecha<=this.filtro.Datefin);\n    if(ventas.length>0){\n      alert(\"hay ventas\")\n    }else{\n      this.messageService.add({severity:'info', summary:'Info', detail:'No se encontraron resultados'});\n    }\n  }\n  formDate(date: any) {\n    let fecha = new Date(date),\n        month = '' + (fecha.getMonth() + 1),\n        day = '' + fecha.getDate(),\n        year = fecha.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}