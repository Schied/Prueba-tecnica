{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/medicamento.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/dialog\";\nfunction MedicamentoComponent_ng_template_6_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(col_r5.header);\n  }\n}\nfunction MedicamentoComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, MedicamentoComponent_ng_template_6_th_1_Template, 2, 1, \"th\", 18);\n    i0.ɵɵelementStart(2, \"th\", 19);\n    i0.ɵɵtext(3, \"Opciones\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const columns_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r3);\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"date\");\n  }\n  if (rf & 2) {\n    const col_r9 = i0.ɵɵnextContext().$implicit;\n    const medicamento_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(1, 1, medicamento_r6[col_r9.fields], \"dd/MM/yyyy\"));\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const col_r9 = i0.ɵɵnextContext().$implicit;\n    const medicamento_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(medicamento_r6[col_r9.fields]);\n  }\n}\nfunction MedicamentoComponent_ng_template_7_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, MedicamentoComponent_ng_template_7_td_1_span_1_Template, 1, 0, \"span\", 24);\n    i0.ɵɵtemplate(2, MedicamentoComponent_ng_template_7_td_1_ng_template_2_Template, 2, 4, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MedicamentoComponent_ng_template_7_td_1_ng_template_4_Template, 1, 1, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r9 = ctx.$implicit;\n    const _r11 = i0.ɵɵreference(3);\n    const _r13 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", col_r9.fields === \"fecha_fabricacion\" || col_r9.fields === \"fecha_vencimiento\")(\"ngIfThen\", _r11)(\"ngIfElse\", _r13);\n  }\n}\nfunction MedicamentoComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, MedicamentoComponent_ng_template_7_td_1_Template, 6, 3, \"td\", 20);\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵelement(3, \"button\", 21)(4, \"button\", 22)(5, \"button\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const columns_r7 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r7);\n  }\n}\nfunction MedicamentoComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"button\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.frmMedicamento.invalid);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"550px\"\n  };\n};\nexport class MedicamentoComponent {\n  constructor(medicamentoService, formBuilder) {\n    this.medicamentoService = medicamentoService;\n    this.formBuilder = formBuilder;\n    this.medicamentos = [];\n    this.cols = [];\n    this.modalMed = false;\n  }\n  ngOnInit() {\n    this.getMedicamentos();\n    this.cols = [{\n      fields: \"id\",\n      header: \"Id\"\n    }, {\n      fields: \"nombre\",\n      header: \"Nombre\"\n    }, {\n      fields: \"fecha_fabricacion\",\n      header: \"Fecha de fabricacion\"\n    }, {\n      fields: \"fecha_vencimiento\",\n      header: \"Fecha de vencimiento\"\n    }, {\n      fields: \"stock\",\n      header: \"Cantidad\"\n    }, {\n      fields: \"valor\",\n      header: \"Valor Unitario\"\n    }];\n    this.frmMedicamento = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: ['', [Validators.required]],\n      fecha_vencimiento: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(32)]],\n      stock: ['', [Validators.required, Validators.min(1)]],\n      valor: ['', [Validators.required, Validators.min(100)]]\n    });\n  }\n  getMedicamentos() {\n    this.medicamentoService.getMedicamentos().subscribe(result => {\n      let meds = [];\n      for (const element of result) {\n        element.fecha_fabricacion = this.formDate(element.fecha_fabricacion);\n        element.fecha_vencimiento = this.formDate(element.fecha_vencimiento);\n        meds.push(element);\n      }\n      this.medicamentos = meds;\n      console.log(this.medicamentos);\n    }, error => {\n      console.log(error);\n    });\n  }\n  showModalMed() {\n    this.modalMed = true;\n  }\n  RegistrarMed() {}\n  formDate(date) {\n    let fecha = new Date(date),\n      month = '' + (fecha.getMonth() + 1),\n      day = '' + fecha.getDate(),\n      year = fecha.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\nMedicamentoComponent.ɵfac = function MedicamentoComponent_Factory(t) {\n  return new (t || MedicamentoComponent)(i0.ɵɵdirectiveInject(i1.MedicamentoService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nMedicamentoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MedicamentoComponent,\n  selectors: [[\"app-medicamento\"]],\n  decls: 31,\n  vars: 11,\n  consts: [[\"pButton\", \"\", \"type\", \"button\", \"label\", \"Registrar nuevo\", 1, \"p-button-primary\", 3, \"click\"], [3, \"value\", \"columns\", \"paginator\", \"rows\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"header\", \"Registrar nuevo\", \"styleClass\", \"p-fluid\", 3, \"responsive\", \"visible\", \"modal\", \"visibleChange\"], [1, \"login-container\", 3, \"formGroup\", \"submit\"], [\"id\", \"cedula_cli\", \"type\", \"number\", \"name\", \"cedula_cli\", \"formControlName\", \"cedula_cli\"], [\"for\", \"cedula_cli\"], [1, \"input-field\", \"col\", \"s12\"], [\"id\", \"nombre_cli\", \"type\", \"text\", \"name\", \"nombre_cli\", \"formControlName\", \"nombre_cli\", \"onkeydown\", \"return /[a-z, ]/i.test(event.key)\"], [\"for\", \"nombre_cli\"], [\"id\", \"apellido_cli\", \"type\", \"text\", \"name\", \"apellido_cli\", \"formControlName\", \"apellido_cli\", \"onkeydown\", \"return /[a-z, ]/i.test(event.key)\"], [\"for\", \"apellido_cli\"], [\"id\", \"celular_cli\", \"type\", \"text\", \"name\", \"celular_cli\", \"formControlName\", \"celular_cli\"], [\"for\", \"celular_cli\"], [\"id\", \"correo_cli\", \"type\", \"email\", \"name\", \"correo_cli\", \"formControlName\", \"correo_cli\"], [\"for\", \"correo_cli\"], [\"pTemplate\", \"footer\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Vender\", 1, \"p-button-primary\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Editar\", 1, \"p-button-warning\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Borrar\", 1, \"p-button-danger\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"thenTemplateName\", \"\"], [\"elseTemplateName\", \"\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-text\", 3, \"disabled\"]],\n  template: function MedicamentoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MedicamentoComponent_Template_button_click_2_listener() {\n        return ctx.showModalMed();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\")(4, \"br\");\n      i0.ɵɵelementStart(5, \"p-table\", 1);\n      i0.ɵɵtemplate(6, MedicamentoComponent_ng_template_6_Template, 4, 1, \"ng-template\", 2);\n      i0.ɵɵtemplate(7, MedicamentoComponent_ng_template_7_Template, 6, 1, \"ng-template\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p-dialog\", 4);\n      i0.ɵɵlistener(\"visibleChange\", function MedicamentoComponent_Template_p_dialog_visibleChange_8_listener($event) {\n        return ctx.modalMed = $event;\n      });\n      i0.ɵɵelementStart(9, \"form\", 5);\n      i0.ɵɵlistener(\"submit\", function MedicamentoComponent_Template_form_submit_9_listener() {\n        return ctx.RegistrarMed();\n      });\n      i0.ɵɵelementStart(10, \"div\");\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementStart(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Cedula\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementStart(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Nombre\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 8);\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementStart(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Apellido\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 8);\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵelementStart(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Celular\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 8);\n      i0.ɵɵelement(27, \"input\", 15);\n      i0.ɵɵelementStart(28, \"label\", 16);\n      i0.ɵɵtext(29, \"Correo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(30, MedicamentoComponent_ng_template_30_Template, 1, 1, \"ng-template\", 17);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.medicamentos)(\"columns\", ctx.cols)(\"paginator\", true)(\"rows\", 3);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c0));\n      i0.ɵɵproperty(\"responsive\", true)(\"visible\", ctx.modalMed)(\"modal\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.frmMedicamento);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.Table, i5.PrimeTemplate, i6.ButtonDirective, i7.Dialog, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","MedicamentoComponent","constructor","medicamentoService","formBuilder","ngOnInit","getMedicamentos","cols","fields","header","frmMedicamento","group","nombre","required","minLength","fecha_fabricacion","fecha_vencimiento","maxLength","stock","min","valor","subscribe","result","meds","element","formDate","push","medicamentos","console","log","error","showModalMed","modalMed","RegistrarMed","date","fecha","Date","month","getMonth","day","getDate","year","getFullYear","length","join","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Schied\\Desktop\\MS\\drogueria-app\\src\\app\\components\\medicamento\\medicamento.component.ts","C:\\Users\\Schied\\Desktop\\MS\\drogueria-app\\src\\app\\components\\medicamento\\medicamento.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Medicamento } from 'src/app/models/medicamento';\nimport { MedicamentoService } from 'src/app/services/medicamento.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-medicamento',\n  templateUrl: './medicamento.component.html',\n  styleUrls: ['./medicamento.component.css']\n})\nexport class MedicamentoComponent implements OnInit{\n\n  medicamentos: Medicamento[] = [];\n  cols: any[] = [];\n  modalMed: boolean = false;\n  frmMedicamento: any;\n\n\n  constructor(private medicamentoService: MedicamentoService,  private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.getMedicamentos();\n    this.cols = [\n      {fields: \"id\", header: \"Id\"},\n      {fields: \"nombre\", header: \"Nombre\"},\n      {fields: \"fecha_fabricacion\", header: \"Fecha de fabricacion\"},\n      {fields: \"fecha_vencimiento\", header: \"Fecha de vencimiento\"},\n      {fields: \"stock\", header: \"Cantidad\"},\n      {fields: \"valor\", header: \"Valor Unitario\"},\n    ]\n    this.frmMedicamento = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      fecha_fabricacion: ['', [Validators.required, ]],\n      fecha_vencimiento: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(32)]],\n      stock: ['', [Validators.required, Validators.min(1)]],\n      valor: ['', [Validators.required, Validators.min(100)]],\n    });\n  }\n\n  getMedicamentos(){\n    this.medicamentoService.getMedicamentos().subscribe( (result): any =>{\n      let meds: Medicamento[] = [];\n      for (const element of result) {\n        element.fecha_fabricacion = this.formDate(element.fecha_fabricacion);\n        element.fecha_vencimiento = this.formDate(element.fecha_vencimiento);\n        meds.push(element);\n      }\n      this.medicamentos = meds;\n      console.log(this.medicamentos);\n    },\n    error => {\n      console.log(error);\n    }\n    );\n  }\n\n  showModalMed(): void{\n    this.modalMed = true;\n  }\n\n  RegistrarMed(): void{\n\n  }\n\n  formDate(date: any) {\n    let fecha = new Date(date),\n        month = '' + (fecha.getMonth() + 1),\n        day = '' + fecha.getDate(),\n        year = fecha.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n  }\n}\n","<div>\n  <br>\n  <button pButton type=\"button\" label=\"Registrar nuevo\" class=\"p-button-primary\" (click)=\"showModalMed()\"></button>\n  <br>\n  <br>\n  <p-table [value]=\"medicamentos\" [columns]=\"cols\" [paginator]=\"true\" [rows]=\"3\" >\n    <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" scope=\"col\">{{col.header}}</th>\n            <th scope=\"col\">Opciones</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-medicamento let-columns=\"columns\">\n        <tr>\n            <td *ngFor=\"let col of columns\" >\n              <span *ngIf=\"col.fields === 'fecha_fabricacion' || col.fields === 'fecha_vencimiento'; then thenTemplateName else elseTemplateName\"></span>\n              <ng-template #thenTemplateName>{{ medicamento[col.fields] | date: 'dd/MM/yyyy'}}</ng-template>\n              <ng-template #elseTemplateName>{{ medicamento[col.fields]}}</ng-template>\n            </td>\n            <td>\n              <button pButton type=\"button\" label=\"Vender\" class=\"p-button-primary\" ></button>\n              <button pButton type=\"button\" label=\"Editar\" class=\"p-button-warning\" ></button>\n              <button pButton type=\"button\" label=\"Borrar\" class=\"p-button-danger\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n  </p-table>\n  <p-dialog header=\"Registrar nuevo\" [responsive]=\"true\" [style]=\"{width: '550px'}\" [(visible)]=\"modalMed\" [modal]=\"true\" styleClass=\"p-fluid\">\n    <form [formGroup]=\"frmMedicamento\" class=\"login-container\" (submit)=\"RegistrarMed()\">\n      <div>\n        <input id=\"cedula_cli\" type=\"number\" name=\"cedula_cli\" formControlName=\"cedula_cli\">\n        <label for=\"cedula_cli\">Cedula</label>\n      </div>\n      <div class=\"input-field col s12\">\n        <input id=\"nombre_cli\" type=\"text\" name=\"nombre_cli\" formControlName=\"nombre_cli\" onkeydown=\"return /[a-z, ]/i.test(event.key)\">\n        <label for=\"nombre_cli\">Nombre</label>\n      </div>\n      <div class=\"input-field col s12\">\n        <input id=\"apellido_cli\" type=\"text\" name=\"apellido_cli\" formControlName=\"apellido_cli\" onkeydown=\"return /[a-z, ]/i.test(event.key)\">\n        <label for=\"apellido_cli\">Apellido</label>\n      </div>\n      <div class=\"input-field col s12\">\n        <input id=\"celular_cli\" type=\"text\" name=\"celular_cli\" formControlName=\"celular_cli\">\n        <label for=\"celular_cli\">Celular</label>\n      </div>\n      <div class=\"input-field col s12\">\n        <input id=\"correo_cli\" type=\"email\" name=\"correo_cli\" formControlName=\"correo_cli\">\n        <label for=\"correo_cli\">Correo</label>\n      </div>\n    </form>\n    <ng-template pTemplate=\"footer\">\n      <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" [disabled]=\"frmMedicamento.invalid\"></button>\n  </ng-template>\n  </p-dialog>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}